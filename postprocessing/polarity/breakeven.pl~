#!/usr/bin/perl
$argc = @ARGV;

if ($argc != 2)   
{
    print "usage: \n perl scrummbleTest.pl arlem_output_file_real outputfilename\n";
    exit;
}
my $seq_file = $ARGV[0];

my $outputfile=$ARGV[1];



open(seqIN, "<$seq_file")
    or die "Oops! can't open input file $seq_file \n";
my @Seqs=<seqIN>;
close(seqIN);

# read each sequence and scrumble its unit types
my $averageI=0;
my $averageJ=0;

my $count=0;
my @Ivalues;
my @Jvalues;
my @IJvalues;

my $ival;
my $jval;

foreach $seq (@Seqs){
    if($seq=~/Breakeven i=\s*(\d*.*\d+) Breakeven j=\s*(\d*.*\d+)/){
	#print "Out ".$1." ".$2."\n";
	if($1==0){ next; $ival=0.5;}
	else{ $ival=$1;}
	if($2==0){next; $jval=0.5;}
	else{ $jval=$2;}
	
	$averageI=$averageI+$ival;
	$averageJ=$averageJ+$jval;
	push(@Ivalues,$ival);
	push(@Jvalues,$jval);
	$tmp=($ival+$jval)/2;
	if($tmp>1){
	    $tmp=1;	    
	}
	push(@IJvalues,$tmp);
	$count++;
	
    }
    
}


print "Count: $count Average I: ".$averageI/$count." Average J: ".$averageJ/$count."\n";








# draw histogram of I

@valuesSorted= sort { $a <=> $b } @IJvalues;
$arraysize=scalar(@valuesSorted);


$max=$valuesSorted[$arraysize-1];
$min=$valuesSorted[0];

$no_interval=20;

$interval=($max-$min)/$no_interval;
$step=$interval/$no_interval;

# compute histogram of 11 values, in each interval take average
my $counter=0;
my $sum=$min+$interval;

#$outputfile=$seq_file."breakevenIJ.dat";
open(seqOut, ">$outputfile")
     or die "Oops! can't open input file $outputfile \n";
print seqOut "#--- \n";

$maxCounter=0;

$counter=0;
$vc=0;

for($ic=0;$ic<$no_interval;$ic++){
    while(($valuesSorted[$vc]<$sum)&&($vc<$arraysize)){
	$counter++;
	$vc++;
    }
    print "Interval: ".$sum." : Conuter: ".$counter."\n";
    print seqOut $sum." ".$counter."\n";
    $sum=$sum+$interval;
    if($counter>$maxCounter){$maxCounter=$counter;}
    $counter=0;
}

#foreach $value (@valuesSorted){
#    if($value<=$sum)
#    {	$counter++;
#	if($counter>$maxCounter){$maxCounter=$counter;}
#    }
#    else{
#	print "Interval: ".$sum." : Conuter".$counter."\n";
#	print seqOut $sum." ".$counter."\n";
#	$sum=$sum+$interval;
#	$counter=1;
#    }
#}

#$value=($improvedLeft-$improvedRight)/($improvedLeft+$improvedRight);
#print seqOut "\n".$value." ".($maxCounter)."\n"; 

#print "arraysize ".$arraysize." Min: ".$min." Max: ".$max."\n";

close(seqOut);

exit;
